version: '3.2'

networks:
  backend-network:
    driver: bridge

services:
  php:
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    restart: on-failure
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - ./:/app
      - /tmp/cache/:/tmp/cache/
    env_file:
      - .env
    command: php-fpm --nodaemonize -d "opcache.enable=0" -d "display_startup_errors=On" -d "display_errors=On" -d "error_reporting=E_ALL" -R
    depends_on:
      - redis
      - db
    working_dir: /app
    networks:
      - backend-network

  web:
    image: nginx
    restart: on-failure
    volumes:
      - ./:/app
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    env_file:
      - .env
    ports:
      - 80:80
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=80
    depends_on:
      - php
    networks:
      - backend-network

  redis:
    image: redis:alpine
    restart: on-failure
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 15s
      timeout: 3s
      retries: 5
    networks:
      - backend-network

  db:
    image: postgres:14-alpine
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=laravel
      - POSTGRES_HOST=db
    volumes:
      - ./volumes/database:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - backend-network
